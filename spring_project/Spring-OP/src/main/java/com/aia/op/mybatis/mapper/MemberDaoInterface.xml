<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- sql 설정: sql문, 반환타입, 파마리터 설정 -->
<mapper namespace="com.aia.op.member.dao.MemberDaoInterface">

	<!-- select의 결과를 객체에 바인딩(매핑/저장) 역할 : 테이블의 컬럼명과 java beans 변수의 이름이 틀린 경우 -->
	<resultMap type="com.aia.op.member.model.Member"
		id="resultMember">
		<id property="idx" column="idx" />
		<result property="uid" column="uid" />
		<result property="upw" column="upw" />
		<result property="uname" column="uname" />
		<result property="uphoto" column="uphoto" />
	</resultMap>

	<select id="SelectTotalList" resultMap="resultMember">
		select * from project.member order by idx desc
	</select>

	<select id="selectTotalListXml" resultType="com.aia.op.member.model.MemberXML">
		select * from project.member order by idx desc
	</select>

	<select id="selectByIdx" resultType="com.aia.op.member.model.Member">
		select * from project.member where idx=#{id}
	</select>


	<select id="selectByIdpw"
		resultType="com.aia.op.member.model.Member">

		select * from project.member where uid=#{param1} and
		upw=#{param2}

	</select>

	<!-- 검색: id, name , id or name map.put("searchType", "id") name, both map.put("keyword","cool") -->

	<!-- Map => HashMap -->
	<select id="totalCount" parameterType="map" resultType="int">
		<!-- #{search.searchType} -->

		select count(*) from project.member

		<where>

			<if test="searchType != null">

				<if test="searchType == 'both'">
					<include refid="whereID" />
					<include refid="whereName" />
				</if>
				<if test="searchType == 'id'">
					<include refid="whereID" />
				</if>
				<if test="searchType == 'name'">
					<include refid="whereName" />
				</if>
			</if>
		</where>
	</select>

	<select id="selectList" parameterType="map"
		resultMap="resultMember">
		<!-- #{search.searchType} -->
		
		select * from project.member

		
		<include refid="listSearch" />

		limit #{startRow}, #{count}

	</select>

	<sql id="listSearch">

		<where>
			<if test="searchType != null">
				<if test="searchType == 'both'">
					<include refid="whereID" />
					<include refid="whereName" />
				</if>
				<if test="searchType == 'id'">
					<include refid="whereID" />
				</if>
				<if test="searchType == 'name'">
					<include refid="whereName" />
				</if>
			</if>
		</where>

	</sql>

	<sql id="whereID">
		or uid like concat('%', #{keyword},'%')
	</sql>

	<sql id="whereName">
		or uname like concat('%', #{keyword},'%')
	</sql>

	<!-- insert 시 자동 증가하는 idx 값을 파라미터로 전달하는 Member 객체의 idx에 저장 해주는 설정 -->
	<insert id="insertMember"
		parameterType="com.aia.op.member.model.Member" useGeneratedKeys="true"
		keyProperty="idx">

		INSERT INTO project.member (uid, upw, uname, uphoto )
		VALUES
		(#{uid},#{upw},#{uname},#{uphoto})

	</insert>

	

	<!-- 
	<![CDATA[ idx<10 and idx>1 ]]> 
	엘리먼트 <>를 엘리먼트의 시작과 끝으로 인식하지 않도록 처리
	-->

	<update id="verify">
		update project.member set verify='Y' 
		where uid=#{param1} and code=#{param2} 
	</update>
	
	<select id="selectMemberById" resultMap="resultMember">
		select * from project.member where uid=#{id}
	</select>

</mapper>	
	
